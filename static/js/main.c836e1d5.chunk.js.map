{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tier","heroMarketUrl","id","ScanTable","props","scanHeroParams","onRemoveClick","heroPrice","interval","heroName","tier","useState","data","setData","intervalRef","useRef","fetchHeroes","useCallback","a","query","queryString","stringify","desc","listedOnMarket","orderBy","page","search","size","maxPrice","fetch","headers","accept","pragma","referrer","referrerPolicy","body","method","mode","credentials","response","json","jsonResponse","items","lowestPriceHero","forEach","item","price","sale","name","image","find","Notification","icon","onclick","window","open","uniqBy","columns","useMemo","key","dataIndex","title","width","render","src","hero","target","href","rel","useEffect","current","clearInterval","setInterval","rowKey","danger","onClick","type","shape","DeleteOutlined","dataSource","App","heroParams","setHeroParams","permission","requestPermission","style","paddingTop","labelCol","span","wrapperCol","initialValues","Rare","onFinish","values","heroParam","notification","error","message","autoComplete","Item","label","rules","required","min","toPairs","map","value","Option","offset","htmlType","param","clonedParams","cloneDeep","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c836e1d5.chunk.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport \"antd/dist/antd.css\";\nimport {\n  Image,\n  Button,\n  Form,\n  Input,\n  InputNumber,\n  notification,\n  Table,\n  Select,\n} from \"antd\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { uniqBy, find, remove, cloneDeep, toPairs } from \"lodash\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport queryString from \"query-string\";\n\nenum Tier {\n  Rare = \"Rare\",\n  \"Rare+\" = \"Rare *\",\n  Epic = \"Epic\",\n  \"Epic+\" = \"Epic *\",\n}\n\ninterface ScanHeroParams {\n  heroName: string;\n  heroPrice: number;\n  tier: Tier;\n  interval: number;\n}\n\ninterface Hero {\n  id: string;\n  name: string;\n  image: string;\n  sale: {\n    price: number;\n  };\n}\n\nconst heroMarketUrl = (id: string) =>\n  `https://market.heroesempires.com/market/${id}`;\n\ninterface Props {\n  scanHeroParams: ScanHeroParams;\n  onRemoveClick: () => void;\n}\n\nconst ScanTable: React.FC<Props> = (props) => {\n  const { scanHeroParams, onRemoveClick } = props;\n  const { heroPrice, interval, heroName, tier } = scanHeroParams;\n  const [data, setData] = useState<Hero[]>([]);\n  const intervalRef = useRef<number>();\n\n  const fetchHeroes = useCallback(async () => {\n    const query = queryString.stringify({\n      tier,\n      desc: false,\n      listedOnMarket: true,\n      orderBy: \"price\",\n      page: 1,\n      search: heroName,\n      size: 5,\n      maxPrice: heroPrice,\n    });\n    const response = await fetch(\n      `https://marketplace-api.heroesempires.com/sale-items?${query}`,\n      {\n        headers: {\n          accept: \"application/json, text/plain, */*\",\n          \"accept-language\": \"en-US,en;q=0.9\",\n          \"cache-control\": \"no-cache\",\n          pragma: \"no-cache\",\n          \"sec-fetch-dest\": \"empty\",\n          \"sec-fetch-mode\": \"cors\",\n          \"sec-fetch-site\": \"same-site\",\n          \"sec-gpc\": \"1\",\n        },\n        referrer: \"https://market.heroesempires.com/\",\n        referrerPolicy: \"strict-origin-when-cross-origin\",\n        body: null,\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"omit\",\n      }\n    );\n    const jsonResponse = await response.json();\n    const items: Hero[] = jsonResponse.data.items;\n    let lowestPriceHero: Hero = items[0];\n\n    items.forEach((item) => {\n      const {\n        sale: { price },\n      } = item;\n      if (!lowestPriceHero || price < lowestPriceHero.sale.price) {\n        lowestPriceHero = item;\n      }\n    });\n\n    if (!lowestPriceHero || lowestPriceHero.sale.price > heroPrice) {\n      return;\n    }\n\n    const {\n      id,\n      name,\n      image,\n      sale: { price },\n    } = lowestPriceHero;\n\n    const existing = find(data, [\"id\", id]);\n    if (existing) {\n      return;\n    }\n\n    const notification = new Notification(\"ScanHero\", {\n      image,\n      icon: image,\n      body: `${name} (${tier}): ${price}`,\n    });\n    notification.onclick = function () {\n      window.open(heroMarketUrl(id));\n    };\n    setData(uniqBy([...data, lowestPriceHero], \"id\"));\n  }, [heroName, tier, heroPrice, data]);\n\n  const columns = useMemo<ColumnsType<Hero>>(\n    () => [\n      {\n        key: \"image\",\n        dataIndex: \"image\",\n        title: \"Image\",\n        width: 100,\n        render(image: string) {\n          return <Image width={100} src={image} />;\n        },\n      },\n      {\n        key: \"id\",\n        dataIndex: \"id\",\n        title: \"ID\",\n        render(id: string, hero) {\n          const { name } = hero;\n          return (\n            <a target=\"_blank\" href={heroMarketUrl(id)} rel=\"noreferrer\">\n              {name} ({tier})\n            </a>\n          );\n        },\n      },\n      {\n        key: \"price\",\n        dataIndex: [\"sale\", \"price\"],\n        title: \"Price\",\n      },\n    ],\n    [tier]\n  );\n\n  useEffect(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    intervalRef.current = window.setInterval(fetchHeroes, interval);\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n  }, [fetchHeroes, interval]);\n\n  return (\n    <Table\n      rowKey=\"id\"\n      title={() => (\n        <strong>\n          {heroName} ({tier}): {heroPrice}{\" \"}\n          <Button\n            danger\n            onClick={onRemoveClick}\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<DeleteOutlined />}\n          />\n        </strong>\n      )}\n      columns={columns}\n      dataSource={data}\n    />\n  );\n};\n\nfunction App() {\n  const [heroParams, setHeroParams] = useState<ScanHeroParams[]>([]);\n\n  useEffect(() => {\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  const onFinish = (values: ScanHeroParams) => {\n    const existing = !!heroParams.find(\n      (heroParam) =>\n        heroParam.heroPrice === values.heroPrice &&\n        heroParam.heroName === values.heroName &&\n        heroParam.tier === values.tier\n    );\n    if (existing) {\n      notification.error({\n        message: \"Existing\",\n      });\n      return;\n    }\n    setHeroParams([...heroParams, values]);\n  };\n\n  return (\n    <Form<ScanHeroParams>\n      style={{\n        paddingTop: 20,\n      }}\n      name=\"scanForm\"\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 8 }}\n      initialValues={{\n        heroName: \"Tusk\",\n        heroPrice: 240,\n        interval: 10_000,\n        tier: Tier.Rare,\n      }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Hero Name\"\n        name=\"heroName\"\n        rules={[{ required: true, message: \"Please input hero name!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Hero Price\"\n        name=\"heroPrice\"\n        rules={[{ required: true, message: \"Please input hero price!\" }]}\n      >\n        <InputNumber min={1} />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Hero Tier\"\n        name=\"tier\"\n        rules={[{ required: true, message: \"Please select hero tier!\" }]}\n      >\n        <Select<Tier>>\n          {toPairs(Tier).map(([value, label]) => (\n            <Select.Option key={value} value={value}>\n              {label}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Set Interval\"\n        name=\"interval\"\n        rules={[{ required: true, message: \"Please input interval!\" }]}\n      >\n        <InputNumber min={5000} />\n      </Form.Item>\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n      {heroParams.map((param) => (\n        <ScanTable\n          key={`${param.heroName}_${param.heroPrice}_${param.tier}`}\n          scanHeroParams={param}\n          onRemoveClick={() => {\n            const clonedParams = cloneDeep(heroParams);\n            remove(\n              clonedParams,\n              (item) =>\n                item.heroName === param.heroName &&\n                item.heroPrice === param.heroPrice &&\n                item.tier === param.tier\n            );\n            setHeroParams(clonedParams);\n          }}\n        />\n      ))}\n    </Form>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}